Basic Commands:

gcloud auth list

gcloud config list project

-------------------------------------------------
Task 1: Create a project jumphost instance

In the Cloud Console, on the Navigation menu (Navigation menu), click Compute Engine > VM Instances.

To create a new instance, click CREATE INSTANCE.

Name : nucleus-jumphost
Series : N1
Machine Type : f1-micro
Image type : Debian GNU/Linux 10 (buster)
Firewall : Allow HTTP traffic

Click Create.
---------------------------------------------------
Task 2: Create a Kubernetes service cluster

Update Region & Zone

gcloud config set compute/zone us-east1-b

gcloud container clusters create my-cluster1

Above command might take 2-5 mins

gcloud container clusters get-credentials my-cluster1

kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:2.0

kubectl expose deployment hello-server --type=LoadBalancer --port 8080

------------------------------------------------------
Task 3: Create the web server frontend

cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF


gcloud compute instance-templates create web-server-template \
          --metadata-from-file startup-script=startup.sh \
          --network nucleus-vpc \
          --machine-type g1-small \
          --region us-east1


gcloud compute instance-groups managed create web-server-group \
          --base-instance-name web-server \
          --size 2 \
          --template web-server-template \
          --region us-east1



gcloud compute firewall-rules create web-server-firewall \
          --allow tcp:80 \
          --network nucleus-vpc
gcloud compute http-health-checks create http-basic-check
gcloud compute instance-groups managed \
          set-named-ports web-server-group \
          --named-ports http:80 \
          --region us-east1


gcloud compute backend-services create web-server-backend \
          --protocol HTTP \
          --http-health-checks http-basic-check \
          --global
gcloud compute backend-services add-backend web-server-backend \
          --instance-group web-server-group \
          --instance-group-region us-east1 \
          --global


gcloud compute url-maps create web-server-map \
          --default-service web-server-backend
gcloud compute target-http-proxies create http-lb-proxy \
          --url-map web-server-map




gcloud compute forwarding-rules create http-content-rule \
        --global \
        --target-http-proxy http-lb-proxy \
        --ports 80
gcloud compute forwarding-rules list